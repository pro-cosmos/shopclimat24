{{ header }}{{ column_left }}
<div id="content">
	<div class="page-header">
		<div class="container-fluid">
			<div class="pull-right">
				<a href="{{ back }}" data-toggle="tooltip" title="{{ button_back }}" class="btn btn-default"><i class="fa fa-reply"></i></a>
			</div>
			<h1>{{ heading_title }}</h1>
			<ul class="breadcrumb">
				{% for breadcrumb in breadcrumbs %}
				<li><a href="{{ breadcrumb['href'] }}">{{ breadcrumb['text'] }}</a></li>
				{% endfor %}
			</ul>
		</div>
	</div>
	<div class="container-fluid">
		<div class="panel panel-default">
			<div class="panel-body">

				<ul class="nav nav-tabs">
					<li class="active"><a href="#tab-settings" data-toggle="tab">{{ tab_settings }}</a></li>
          {% for provider in providers %}
							<li><a href="#tab-{{ provider.key }}" data-toggle="tab">{{ provider.name }}</a></li>
          {% endfor %}
				</ul>

				<div class="tab-content">

          {% for provider in providers %}
					<div class="tab-pane" id="tab-{{ provider.key }}">
						<form action="{{ import }}" method="post" enctype="multipart/form-data" id="{{ provider.key }}" class="form-horizontal">
							<input type="hidden" name="provider" value="{{ provider.key }}">
							<table class="form">
								<tr>
									<td>
										<p>Файл каталога:</p>
                    {% if (provider.currentfile.catalog) %}
										 <p>
											 <a href="{{ provider.currentfile.catalog_url }}" target="_blank">{{ provider.currentfile.catalog }}</a>
											<input type="hidden" name="remove_catalog" value="0" />
											<button data-toggle="tooltip"  class="btn btn-danger" onclick="deleteFile('{{ provider.key }}', 'remove_catalog')" data-original-title="Удалить"><i class="fa fa-trash-o"></i></button>
										 </p>
											 {% else %}
										<input type="file" name="upload_catalog" id="upload_catalog" />
                  {% endif %}
									</td>
								</tr>

								<tr>
									<td>
										<p>Файл прайса:</p>
                    {% if (provider.currentfile.price) %}
											<p>
												<a href="{{ provider.currentfile.price_url }}" target="_blank">{{ provider.currentfile.price }}</a>
												<input type="hidden" name="remove_price" value="0" />
												<button data-toggle="tooltip"  class="btn btn-danger" onclick="deleteFile('{{ provider.key }}', 'remove_price')" data-original-title="Удалить"><i class="fa fa-trash-o"></i></button>
											</p>
                    {% else %}
											<input type="file" name="upload_price" id="upload_price" />
                    {% endif %}
									</td>
								</tr>

								<tr>
									<td class="buttons"><a onclick="uploadData('{{ provider.key }}');" class="btn btn-primary"><span>{{ button_import }}</span></a></td>
								</tr>

								<tr>
									<td><p>Настройки:</p>
										<textarea name="settings_{{ provider.key }}" rows="10" cols="100">{{ provider.settings }}</textarea>
									</td>
								</tr>

								<tr>
									<td class="buttons"><a onclick="uploadData('{{ provider.key }}');" class="btn btn-primary"><span>Save</span></a></td>
								</tr>

							</table>
						</form>
					</div>
          {% endfor %}


					<div class="tab-pane active" id="tab-settings">
						<form action="{{ settings }}" method="post" enctype="multipart/form-data" id="settings" class="form-horizontal">
							<table class="form">
								<tr>
									<td><p>Общие настройки:</p>
										<textarea name="settings_globals" rows="10" cols="100">{{ fixprice_globals_settings }}</textarea>
									</td>
								</tr>
									<td class="buttons"><a onclick="updateSettings();" class="btn btn-primary"><span>Сохранить</span></a></td>
								</tr>
							</table>
						</form>
					</div>

				</div>
			</div>
		</div>

	</div>

<script type="text/javascript"><!--

$(document).ready(function() {

	$('span.close').click(function() {
		$(this).parent().remove();
	});

});

function checkFileSize(id) {
	// See also http://stackoverflow.com/questions/3717793/javascript-file-upload-size-validation for details
	var input, file, file_size;

	if (!window.FileReader) {
		// The file API isn't yet supported on user's browser
		return true;
	}

	input = document.getElementById(id);
	if (!input) {
		// couldn't find the file input element
		return true;
	}
	else if (!input.files) {
		// browser doesn't seem to support the `files` property of file inputs
		return true;
	}
	else if (!input.files[0]) {
		// no file has been selected for the upload
		alert( "{{ error_select_file }}" );
		return false;
	}
	else {
		file = input.files[0];
		file_size = file.size;
		{% if ((post_max_size is defined) and (post_max_size)) %}
		// check against PHP's post_max_size
		post_max_size = {{ post_max_size }};
		if (file_size > post_max_size) {
			alert( "{{ error_post_max_size }}" );
			return false;
		}
		{% endif %}
		{% if ((upload_max_filesize is defined) and (upload_max_filesize)) %}
		// check against PHP's upload_max_filesize
		upload_max_filesize = {{ upload_max_filesize }};
		if (file_size > upload_max_filesize) {
			alert( "{{ error_upload_max_filesize }}" );
			return false;
		}
		{% endif %}
		return true;
	}
}

    function deleteFile(form_id, type) {
        if (confirm('Вы уверены?')) {
            $('#' + form_id + ' input[name="'+ type +'"]').attr('value', 1);
            $('#' + form_id).submit();
        }
    }

function uploadData(form_id) {
	//if (checkFileSize('upload_catalog')) {
		$('#'+ form_id).submit();
	//}
}

function isNumber(txt){ 
	var regExp=/^[\d]{1,}$/;
	return regExp.test(txt); 
}

count_product = 1;

function updateCountProducts() {
	$.ajax({
		url: 'index.php?route=extension/export_import/getCountProduct&user_token={{ user_token }}',
		type: 'post',
		dataType: 'json',
		data: $("input[name='categories[]']").serialize(),
		success: function(json) {
			if (json['count']) {
				count_product = json['count'];
			} else {
			}
			console.log("success: count_product='"+count_product+"'");
		},
		error: function(xhr, ajaxOptions, thrownError) {
			alert(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
		}
	});
}

function validateExportForm(id) {
	var export_type = $('input[name=export_type]:checked').val();
	if ((export_type!='c') && (export_type!='p') && (export_type!='u')) {
		return true;
	}

	var val = $("input[name=range_type]:checked").val();
	var min = $("input[name=min]").val();
	var max = $("input[name=max]").val();

	if ((min=='') && (max=='')) {
		return true;
	}

	if (!isNumber(min) || !isNumber(max)) {
		alert("{{ error_param_not_number }}");
		return false;
	}

	var count_item;
	switch (export_type) {
		case 'p': count_item = count_product-1;  break;
		case 'c': count_item = {{ count_category-1 }}; break;
		default:  count_item = {{ count_customer-1 }}; break;
	}
	var batchNo = parseInt(count_item/parseInt(min))+1; // Maximum number of item-batches, namely, item number/min, and then rounded up (that is, integer plus 1)
	var minItemId;
	switch (export_type) {
		case 'p': minItemId = parseInt( {{ min_product_id }} );  break;
		case 'c': minItemId = parseInt( {{ min_category_id }} ); break;
		default:  minItemId = parseInt( {{ min_customer_id }} ); break;
	
	}
	var maxItemId;
	switch (export_type) {
		case 'p': maxItemId = parseInt( {{ max_product_id }} );  break;
		case 'c': maxItemId = parseInt( {{ max_category_id }} ); break;
		default:  maxItemId = parseInt( {{ max_customer_id }} ); break;
	
	}

	if (val=="page") {  // Min for the batch size, Max for the batch number
		if (parseInt(max) <= 0) {
			alert("{{ error_batch_number }}");
			return false;
		}
		if (parseInt(max) > batchNo) {        
			alert("{{ error_page_no_data }}"); 
			return false;
		} else {
			$("input[name=max]").val(parseInt(max)+1);
		}
	} else {
		if (minItemId <= 0) {
			alert("{{ error_min_item_id }}");
			return false;
		}
		if (parseInt(min) > maxItemId || parseInt(max) < minItemId || parseInt(min) > parseInt(max)) {  
			alert("{{ error_id_no_data }}"); 
			return false;
		}
	}
	return true;
}

function downloadData() {
	if (validateExportForm('export')) {
		$('#export').submit();
	}
}

function updateSettings() {
	$('#settings').submit();
}

// Category
$('input[name=\'category\']').autocomplete({
	'source': function(request, response) {
		$.ajax({
			url: 'index.php?route=catalog/category/autocomplete&user_token={{ user_token }}&filter_name=' +  encodeURIComponent(request),
			dataType: 'json',
			success: function(json) {
				response($.map(json, function(item) {
					return {
						label: item['name'],
						value: item['category_id']
					}
				}));
			}
		});
	},
	'select': function(item) {
		$('input[name=\'category\']').val('');
		$('#category' + item['value']).remove();
		$('#categories').append('<div id="category' + item['value'] + '"><i class="fa fa-minus-circle"></i> ' + item['label'] + '<input type="hidden" name="categories[]" value="' + item['value'] + '" /></div>');
		updateCountProducts();
	}
});

$('#categories').delegate('.fa-minus-circle', 'click', function() {
	$(this).parent().remove();
	updateCountProducts();
});
//--></script>

</div>
{{ footer }}
